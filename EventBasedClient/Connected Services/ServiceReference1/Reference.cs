//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EventBasedClient.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IEventBasedService", CallbackContract=typeof(EventBasedClient.ServiceReference1.IEventBasedServiceCallback))]
    public interface IEventBasedService {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IEventBasedService/SubscribeContractInformationsModified")]
        void SubscribeContractInformationsModified();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IEventBasedService/SubscribeContractInformationsModified")]
        System.Threading.Tasks.Task SubscribeContractInformationsModifiedAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IEventBasedService/UpdateData")]
        void UpdateData(string name);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IEventBasedService/UpdateData")]
        System.Threading.Tasks.Task UpdateDataAsync(string name);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEventBasedServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IEventBasedService/ContractInformationsModified")]
        void ContractInformationsModified(string[] stations);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IEventBasedService/UpdatedData")]
        void UpdatedData(string name);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEventBasedServiceChannel : EventBasedClient.ServiceReference1.IEventBasedService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EventBasedServiceClient : System.ServiceModel.DuplexClientBase<EventBasedClient.ServiceReference1.IEventBasedService>, EventBasedClient.ServiceReference1.IEventBasedService {
        
        public EventBasedServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public EventBasedServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public EventBasedServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public EventBasedServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public EventBasedServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void SubscribeContractInformationsModified() {
            base.Channel.SubscribeContractInformationsModified();
        }
        
        public System.Threading.Tasks.Task SubscribeContractInformationsModifiedAsync() {
            return base.Channel.SubscribeContractInformationsModifiedAsync();
        }
        
        public void UpdateData(string name) {
            base.Channel.UpdateData(name);
        }
        
        public System.Threading.Tasks.Task UpdateDataAsync(string name) {
            return base.Channel.UpdateDataAsync(name);
        }
    }
}
